@model IEnumerable<CMSShoppingCart.Models.ViewModels.Shop.CategoryVM>

@{

    ViewBag.Title = "Categories";
}

<h2>Categories</h2>

@*<div class="new-cat">

        <input type="text" id="newcatname" class="in"/>
        <p>
            <a href="#" id="newcata">add a new category</a>
            <span class="ajax-text">
                <img src="~/Content/img/ajax-loader.gif" />
            </span>
        </p>
    </div>*@

<div class="new-cat">
    <div class="input-group">
        <input type="text" class="form-control" id="newcatname" placeholder="Enter new Category">
        <div class="input-group-btn">
            <a class="btn btn-default" id="newcata">
                <i class="glyphicon glyphicon-plus"></i>
            </a>
        </div>

    </div>
    <div class="row col-sm-6">
        <span class="ajax-text">
            <img src="~/Content/img/ajax-loader.gif" />
        </span>
    </div>
</div>


@if (!Model.Any())
{
    <h1 class="text-center">There are no categories.</h1>
}
else
{
    <table class="table sorting categories" id="pages">
        <tr class="home">
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model){
                <tr id="id_@item.Id">
                    <td>
                        <div class="ajaxdivtd"></div>
                        @*@Html.DisplayFor(modelItem => item.Name)*@
                        @Html.EditorFor(modelItem => item.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </td>
                    <td>
                        @Html.ActionLink("Delete", "DeleteCategory", new { id = item.Id }, new { @class = "delete" })
                    </td>
                </tr>
            }

    </table>
}



@section Scripts{

    <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>
    <script>
        $(function () {

            // add a new category
            const newCatA = $("a#newcata");
            const newCatTextInput = $("#newcatname");
            const ajaxText = $("span.ajax-text")
            const table = $("table#pages tbody")

            newCatTextInput.keyup(function (e) {
                // if user press enter then click the anchor tag to add a category
                if (e.keyCode == 13) {
                    newCatA.click();
                }
            });


            newCatA.click(function (e) {

                e.preventDefault();
                const catName = newCatTextInput.val();


                // Don't accept if less than 2 character.
                if (catName.length < 2) {
                    alert("Category name at least 2 characters long.")
                    return false;
                }

                ajaxText.show();

                const url = "/admin/shop/AddNewCategory";

                $.post(url, { catName: catName }, function (data) {

                    //response is either token(titletaken) or id of newly inserted category
                    const response = data.trim();

                    if (response == "titletaken") {
                        ajaxText.html("<div class='alert alert-danger'>Title is taken.</div>").show();
                        setTimeout(function () {
                            ajaxText.fadeOut("slow", function () {
                                ajaxText.html("<img src='/Content/img/ajax-loader.gif' />");
                            });

                        }, 2000);
                        return false;
                    } else {

                        //check category is exist or not (In the sense of adding first time or appeding)
                        if (!$("table#pages").length) {
                            location.reload();
                        } else {
                            ajaxText.html("<div class='alert alert-success'>Category is added.</div>").show();
                            setTimeout(function () {
                                ajaxText.fadeOut("slow", function () {
                                    ajaxText.html("<img src='/Content/img/ajax-loader.gif' />");
                                });

                            }, 2000);

                            //reset the input box
                            newCatTextInput.val("");


                            const toAppend = $("table#pages tbody tr:last").clone();
                            toAppend.attr("id", "id_" + data);
                            toAppend.find("#item_Name").val(catName);
                            toAppend.find("a.delete").attr("href", "/Admin/Shop/DeleteCategory/" + data);
                            table.append(toAppend);
                            table.sortable("refresh");
                        }
                    }

                }).fail(function (jqxhr, settings, ex) {
                    console.log('failed' + ex);
                    console.log(jqxhr.responseXML);
                });

            });

            // Confirmation of deletion
            $(document).on('click', 'a.delete', function () {
                // Ok -> true , Cancel -> false.
                // On true visit allow GET request of delete(DeletePage) and on false block or prevent on GET request of delete(DeletePage)
                if (!confirm("Do you want to delete Category?.")) return false;
            });

            // Category rename

            let originalTextValue;
            $("table#pages input.text-box").dblclick(function () {
                originalTextValue = $(this).val();
                $(this).attr("readonly", false);
            });

            $("table#pages input.text-box").keyup(function (e) {
                if (e.keyCode == 13) {
                    $(this).blur();
                }
            });

            $("table#pages input.text-box").blur(function () {
                const $this = $(this);
                const ajaxdiv = $this.parent().find(".ajaxdivtd");
                const newCatName = $this.val();
                const id = $this.parent().parent().attr('id').substring(3);
                const url = "/admin/shop/RenameCategory";

                if (newCatName.length < 2) {
                    alert("Category Name Must be at least 2 characters long");
                    $this.attr("readonly", true);
                    return false;
                }

                $.post(url, { newCatName, id }, function (data) {
                    const response = data.trim();

                    if (response == 'titletaken') {
                        $this.val(originalTextValue);
                        ajaxdiv.html("<div class='row col-sm-6 alert alert-danger'>Title is taken.</div>").show();
                    } else {
                        ajaxdiv.html("<div class='row col-sm-6 alert alert-success'>The Category name has been change.</div>").show();
                    }

                    setTimeout(function () {
                        ajaxdiv.fadeOut("slow", function () {
                            ajaxdiv.html("");
                        });
                    }, 2000);
                }).done(function () {
                    $this.attr("readonly", true);
                });

            });

            //  Sorting using Drag and drop
            $("table#pages tbody").sortable({
                items: "tr:not(.home)",
                placeholder: "ui-state-highlight",
                update: function () {
                    //tbody is neccessary (tbody -> all the rows in the table)
                    const ids = $("table#pages tbody").sortable("serialize");
                    console.log(ids);
                    const url = "/Admin/Shop/ReorderCategories";

                    $.post(url, ids, function (data) {
                    });

                }
            })

        });
    </script>
}