@model IEnumerable<CMSShoppingCart.Models.ViewModels.Shop.CategoryVM>

@{

    ViewBag.Title = "Categories";
}

<h2>Categories</h2>

<div class="new-cat">
    <input type="text" id="newcatname" />
    <p>
        <a href="#" id="newcata">add a new category</a>
        <span class="ajax-text">
            <img src="~/Content/img/ajax-loader.gif" />
        </span>
    </p>
</div>

@if (!Model.Any())
{
    <h1 class="text-center">There are no categories.</h1>
}
else
{
    <table class="table sorting" id="pages">
        <tr class="home">
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @*@Html.DisplayFor(modelItem => item.Name)*@
                    @Html.EditorFor(modelItem => item.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </td>
                <td>
                    @Html.ActionLink("Delete", "DeleteCategory", new { id = item.Id }, new { @class = "delete" })
                </td>
            </tr>
        }

    </table>
}



@section Scripts{

    <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>
    <script>
        $(function () {

            // add a new category
            var newCatA = $("a#newcata");
            var newCatTextInput = $("#newcatname");
            var ajaxText = $("table#pages")
            var table = $("table#pages tbody")

            newCatTextInput.keyup(function (e)){
                // if user press enter then click the anchor tag to add a category
                if (e.keyup == 13) {
                    newCatA.click();
                }
            }


            newcatA.click(function (e) {
                e.preventDefault();

                var catName = newCatTextInput.val();

                // Don't accept if less than 2 character.
                if (carName < 2) {
                    alert("Category name at least 2 characters long.")
                    return false;
                }

                ajaxText.show();

                var url = "/admin/shop/AddNewCategory";

                $.post(url, { catName: catName }, function (data) {

                    if (response == "titletaken") {
                        ajaxText.html("<span class='alert alert-danger'>Title is taken.</span>")
                        setTimeout(function () {
                            ajaxText.fadeOut("fast", function () {
                                ajaxText.html("<img src='/Content/img/ajax-loader.gif' />")
                            });

                        }, 2000);
                        return false;
                    } else {

                    }

                });

            });

            // Confirmation of deletion
            $("a.delete").on('click', function () {
                // Ok -> true , Cancel -> false.
                // On true visit allow GET request of delete(DeletePage) and on false block or prevent on GET request of delete(DeletePage)
                if (!confirm("Do you want to delete page?.")) return false;
            });


            //  Sorting using Drag and drop
            $("table#pages tbody").sortable({
                items: "tr:not(.home)",
                placeholder: "ui-state-highlight",
                update: function () {
                    var ids = $("table#pages tbody").sortable("serialize");
                    console.log(ids);
                    var url = "/Admin/Pages/ReorderPages";

                    $.post(url, ids, function (data) {
                    });

                }
            })

        });
    </script>
}